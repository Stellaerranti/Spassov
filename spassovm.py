# -*- coding: utf-8 -*-
"""SpassovM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_CHpAf6RAWAzswnx4IxSQ7KSSVfymd_M
"""

import matplotlib.pyplot as plt
import numpy as np
import math

def H(t):
  if t < c:
    return 1
  else:
    return -1

def e(z):
  return math.sin(z*5)/2 + 0.5

def eta(xi,z):
  if xi < d0:
    return 0
  elif xi < d1:
    return e(z)/(d1 - d0)
  elif xi < d2:
    return 0.
  elif xi < d3:
    return (1-e(z))/(d3-d2)
  elif xi>=d3:
    return 0

def O(t):
  if t < 0:
    return 0
  if t >= 0:
    return 1

def initial(z):
  s = 0
  step = 0.01
  xi = 0
  while xi < z:
    s = s + H(z-xi)*eta(xi,z)*step
    xi = xi + step
  return s

"""d0<d1<d2<d3

c - момент момент инверсии(может быть любым)
"""

d0 = 1
d1 = 1.5
d2 = 2
d3 = 3

c = 4

z = np.linspace(0,10,1000)
M = np.zeros(z.shape[0])

for i in range(z.shape[0]):
  M[i] = initial(z[i])

logic = []
for i in range(1,M.shape[0]):
  if M[i] <= 0 and M[i-1] >  0 :
    logic.append(z[i])
  if M[i] > 0 and M[i-1] <= 0:
    logic.append(z[i])
if(len(logic) % 2 !=0):
  logic.append(z[M.shape[0]-1])
logic = np.asarray(logic)

fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(5, 5), gridspec_kw={'width_ratios': [3, 1]})
ax1.plot(M,z)
ax1.set_ylim(10,0)
ax1.set_xlim(-1.2,1.2)
ax1.axvline(0,c='r',linestyle = 'dashed')
count = 0
ax2.fill_between(z,0,logic[0], facecolor='grey',hatch = '/')
while(count < logic.shape[0]-1):
   ax2.fill_between(z,logic[count],logic[count+1], facecolor='black')
   count = count+2
ax2.set_ylim(10,0)
ax2.set_xlim(0,1)
ax2.set_xticks([])
ax2.set_yticks([])
plt.show()